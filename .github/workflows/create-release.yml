# This is a basic workflow to help you get started with Actions

name: create-release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build-ubuntu:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    #- run: curl -O "https://download.java.net/java/GA/jdk14/076bab302c7b4508975440c56f6cc26a/36/GPL/openjdk-14_linux-x64_bin.tar.gz"
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 13
      #  jdkFile: ./openjdk-14_linux-x64_bin.tar.gz
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew dist  
    - name: Get Tag name 
      uses: olegtarasov/get-tag@v2    
      id: tagName
      with:
          tagRegex: "v(.*)"  # Optional. Returns specified group text as tag name. Full tag string is returned if regex is not defined.
          tagRegexGroup: 1 # Optional. Default is 1.
    - name: Create Distribution   
      run: distribution/create-distribution-linux.sh ${{ steps.tagName.outputs.tag }}
    - name: Upload Release Assets
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
         upload_url: https://github.com/miho/freerouting/releases/tag/v${{ steps.tagName.outputs.tag }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
         asset_path: ./distribution/freerouting-${{ steps.tagName.outputs.tag }}-linux-x64.zip
         asset_name: freerouting-${{ steps.tagName.outputs.tag }}-linux-x64.zip
         asset_content_type: application/zip  
   
  build-windows:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 13
    - name: Build with Gradle
      run: .\gradlew.bat dist 
    - name: Get Tag name 
      uses: olegtarasov/get-tag@v2    
      id: tagName
      with:
          tagRegex: "v(.*)"  # Optional. Returns specified group text as tag name. Full tag string is returned if regex is not defined.
          tagRegexGroup: 1 # Optional. Default is 1.
#    - name: Set App Version
#      run: $env:APP_VERSION=${{ steps.tagName.outputs.tag }}
    - name: Create Distribution   
      run: distribution\create-distribution-windows.bat ${{ steps.tagName.outputs.tag }}   
    - name: Upload Release Assets
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
         upload_url: https://github.com/miho/freerouting/releases/tag/v${{ steps.tagName.outputs.tag }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
         asset_path: ./distribution/Freerouting-${{ steps.tagName.outputs.tag }}.msi
         asset_name: freerouting-${{ steps.tagName.outputs.tag }}-windows-x64.msi
         asset_content_type: application/msi

  build-macos:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 13
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew dist 
    - name: Create Distribution   
      run: distribution/create-distribution-macos.sh
    - name: Get Tag name 
      uses: olegtarasov/get-tag@v2    
      id: tagName
      with:
          tagRegex: "v(.*)"  # Optional. Returns specified group text as tag name. Full tag string is returned if regex is not defined.
          tagRegexGroup: 1 # Optional. Default is 1.
    - name: Create distribution   
      run: distribution/create-distribution-macos.sh
    - name: Upload Release Assets
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
         upload_url: https://github.com/miho/freerouting/releases/tag/v${{ steps.tagName.outputs.tag }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
         asset_path: ./distribution/freerouting-${{ steps.tagName.outputs.tag }}-macos-x64.dmg
         asset_name: freerouting-${{ steps.tagName.outputs.tag }}-macos-x64.dmg
         asset_content_type: application/dmg       
